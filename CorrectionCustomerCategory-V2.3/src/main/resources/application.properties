# V2.2 application.properties contient des propriétés communes à tous les profils
# V2.2 Comme par exemple le port et le timeout
server.port=7272
server.servlet.session.timeout=5000
# V2.2 Et une propriété spring.profile.active pour définir le profil.
# V2.2 On peut écrire dev ou prod pour choisir l'un ou l'autre.
# V2.2 Mais ici @maven.profile@ est une variable défini dans le pom.xml
# V2.2 et qui contiendra dev ou prod selon le profil choisi dans Netbeans.
spring.profiles.active=@maven.profile@
# V2.2 Cette propriété pourra exploitée grâce à l'annotation @Profile(...)

# V2.2 Par ailleurs, de manière automatique, avec Spring Boot, (je dis bien Boot)
# V2.2 une fois ce fichier de configuration lu (application.properties)
# V2.2 Spring Boot continue a configurer en lisant un éventuel fichier
# V2.2 application-<spring.profiles.active>.properties. Par exemple, si le profil
# V2.2 est "dev", alors la configuration continue avec le fichier application-dev.properties,
# V2.2 s'il existe.
# V2.2 De plus, ce fichier est prioritaire.
# V2.2 Voir les sessions 5.1 et 5.2 dans https://www.baeldung.com/properties-with-spring
